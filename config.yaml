system:
  domain: mall
  version: 1.0
  env: "dev"
  HttpPort: ":9090"
  Host: "localhost"
  UploadModel: "oss"

mysql:
  default:
    dialect: "mysql"
    dbHost: "154.8.141.205"
    dbPort: "3306"
    dbName: "mall"
    userName: "root"
    password: "Zhao06181121"
    charset: "utf8mb4"

kafka:
  disableConsumer:
    debug: true
    address: 127.0.0.1:9092
    requiredAck: -1 # 发送完数据后是否需要拿多少个副本确认 -1 需要全部
    readTimeout: 30 # 默认30s
    writeTimeout: 30 # 默认30s
    maxOpenRequests: 5  # 在发送阻塞之前，允许有多少个未完成的请求，默认为5
    partition: 2 # 分区生成方案 0根据topic进行hash、1随机、2轮询

redis:
  redisDbName: 0
  redisHost: 154.8.141.205
  redisPort: 6380
  redisPassword: Zhao06181121
  redisNetwork: "tcp"

cache:
  cacheType: redis
  cacheEmpires: 600
  cacheWarmUp:
  cacheServer:

email:
  address: http://localhost:8585/#/vaild/email/
  smtpHost: smtp.qq.com
  smtpEmail: 1468450337@qq.com
  smtpPass: qglsgngjclyvjfff

encryptSecret:
  jwtSecret: "FanOne666Secret"
  emailSecret: "EmailSecret"
  phoneSecret: "PhoneSecret"
  moneySecret: "moneySecret"

oss:
  AccessKeyId: fEocXi8Em36iAo7twj-o3MKGzcCdSubXzSzd_Y56
  AccessKeySecret: agtaW1_kQ6B6CuDAVzhrPrws3ss4M0zpDj7S9379
  BucketName: golangmall
  QiNiuServer: 	rxkjiutfo.hn-bkt.clouddn.com

photoPath:
  photoHost: http://127.0.0.1
  ProductPath: /static/imgs/product/
  AvatarPath: /static/imgs/avatar/

es:
  EsHost: 127.0.0.1
  EsPort: 9200
  EsIndex: myapp

rabbitMq:
  rabbitMQ: amqp
  rabbitMQUser: guest
  rabbitMQPassWord: guest
  rabbitMQHost: localhost
  rabbitMQPort: 5672

logConfig:
  level: "debug"
  filename: "./log/golang_mall.log"
  max_size: 1000
  max_age: 3600
  max_backups: 5